name: Nightly Build

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-nightly:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
            target: 'universal-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'clip-vault-app/yarn.lock'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsqlcipher-dev libssl-dev pkg-config

      - name: Install frontend dependencies
        working-directory: ./clip-vault-app
        run: yarn install --frozen-lockfile

      - name: Build frontend
        working-directory: ./clip-vault-app
        run: yarn build

      - name: Generate nightly version
        id: version
        run: |
          DATE=$(date +'%Y%m%d')
          COMMIT=$(git rev-parse --short HEAD)
          echo "version=nightly-${DATE}-${COMMIT}" >> $GITHUB_OUTPUT

      - name: Build Tauri app (Nightly)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./clip-vault-app
          tagName: ${{ steps.version.outputs.version }}
          releaseName: 'Clip Vault Nightly (${{ steps.version.outputs.version }})'
          releaseBody: |
            Automated nightly build from the latest main branch.
            
            **Warning**: Nightly builds are unstable and may contain bugs.
            
            Commit: ${{ github.sha }}
            Build Date: ${{ steps.version.outputs.version }}
          releaseDraft: false
          prerelease: true
          args: ${{ matrix.args }}